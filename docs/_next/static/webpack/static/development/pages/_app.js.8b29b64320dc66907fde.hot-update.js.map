{"version":3,"file":"static/webpack/static/development/pages/_app.js.8b29b64320dc66907fde.hot-update.js","sources":["webpack:///./src/components/chrome/index.tsx"],"sourcesContent":["import React, { FunctionComponent, useRef, useState } from 'react'\n\nimport {\n  EuiButton,\n  EuiHeader,\n  EuiHeaderSection,\n  EuiHeaderSectionItem,\n  EuiHeaderSectionItemButton,\n  EuiHeaderBreadcrumbs,\n  EuiHeaderLogo,\n  EuiIcon,\n  // @ts-ignore\n  EuiNavDrawerGroup,\n  // @ts-ignore\n  EuiNavDrawer,\n  EuiHorizontalRule,\n  EuiShowFor,\n  Breadcrumb,\n} from '@elastic/eui'\n\nimport { TopLinks } from '../navigation_links/top_links'\nimport { SolutionLinks } from '../navigation_links/solution_links'\nimport { ExploreLinks } from '../navigation_links/explore_links'\nimport { AdminLinks } from '../navigation_links/admin_links'\nimport { setInitialTheme, setTheme, Theme } from '../../lib/theme'\n\nimport moon from './assets/moon.svg'\nimport sun from './assets/sun.svg'\n\nimport './_index.scss';\n\ninterface EuiNavDrawerStub {\n  toggleOpen: () => void\n}\n\nconst Logo: FunctionComponent = () => (\n  <EuiHeaderLogo iconType='logoElastic' href='/#/chrome/nav-drawer' aria-label='Goes to home' />\n)\n\nconst MenuTrigger: FunctionComponent<{ onClick: () => void }> = ({ onClick }) => (\n  <EuiHeaderSectionItemButton aria-label='Open nav' onClick={onClick}>\n    <EuiIcon type='apps' href='#' size='m' />\n  </EuiHeaderSectionItemButton>\n)\n\nconst Breadcrumbs: FunctionComponent = () => {\n  const breadcrumbs: Breadcrumb[] = [\n    {\n      text: 'Home',\n      href: '#',\n      onClick: (e: { preventDefault: () => void }) => {\n        e.preventDefault()\n        console.log('You clicked home')\n      },\n      'data-test-subj': 'breadcrumbsAnimals',\n      className: 'customClass',\n    },\n  ]\n\n  return <EuiHeaderBreadcrumbs breadcrumbs={breadcrumbs} />\n}\n\n/**\n * Renders the UI that surrounds the page content.\n */\nconst initialTheme = setInitialTheme()\n\nconst Chrome: FunctionComponent = ({ children }) => {\n  // This is an EuiNavDrawer, which isn't a TypeScript module yet\n  const navDrawerRef = useRef<EuiNavDrawerStub>(null)\n\n  const [theme, setThemeInState] = useState<Theme>(initialTheme)\n\n  const handleChangeTheme = () => {\n    const newTheme = theme === 'dark' ? 'light' : 'dark'\n\n    setTheme(newTheme)\n    setThemeInState(newTheme)\n  }\n\n  const themeIcon = theme === 'light' ? sun : moon\n\n  return (\n    <>\n      <EuiHeader className='chrHeader'>\n        <EuiHeaderSection grow={false}>\n          <EuiShowFor sizes={['xs', 's']}>\n            <EuiHeaderSectionItem border='right'>\n              <MenuTrigger onClick={() => navDrawerRef.current!.toggleOpen()} />\n            </EuiHeaderSectionItem>\n          </EuiShowFor>\n\n          <EuiHeaderSectionItem border='right'>\n            <Logo />\n          </EuiHeaderSectionItem>\n\n          <EuiHeaderSectionItem border='right'>{/* <HeaderSpacesMenu /> */}</EuiHeaderSectionItem>\n        </EuiHeaderSection>\n\n        <Breadcrumbs />\n\n        <EuiHeaderSection side='right'>\n          <EuiHeaderSectionItem className='chrHeaderSectionItem'>\n            <EuiButton size='s' iconType={themeIcon} onClick={handleChangeTheme}>\n              Switch Theme\n            </EuiButton>\n          </EuiHeaderSectionItem>\n        </EuiHeaderSection>\n      </EuiHeader>\n      <EuiNavDrawer ref={navDrawerRef}>\n        <EuiNavDrawerGroup listItems={TopLinks} />\n        <EuiHorizontalRule margin='none' />\n\n        <EuiNavDrawerGroup listItems={ExploreLinks} />\n        <EuiHorizontalRule margin='none' />\n\n        <EuiNavDrawerGroup listItems={SolutionLinks} />\n        <EuiHorizontalRule margin='none' />\n\n        <EuiNavDrawerGroup listItems={AdminLinks} />\n      </EuiNavDrawer>\n      <div className='chrWrap'>{children}</div>\n    </>\n  )\n}\n\nexport default Chrome\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAkBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}