{"version":3,"file":"static/webpack/static/development/pages/_app.js.ab3532ef7bd5c8e6ea54.hot-update.js","sources":["webpack:///./src/lib/routing.ts"],"sourcesContent":["import * as routeMatcher from 'next/dist/next-server/lib/router/utils/route-matcher'\n\nconst pathPrefix = process.env.PATH_PREFIX as string\n\n/**\n * Right now, Next doesn't work well when you try to combine an assetPrefix,\n * static site generation and dynamic routing. This may well be resolved\n * by introducing a `basePath` option, but for now, monkey-patch the router\n * to remove any `assetPrefix` (which is called a `pathPrefix` here) before\n * forwarding on a route matcher to the original router.\n *\n * If you're not using static site generation (SSG), or using SSG but without\n * dynamic routes, then you don't need this and can safely remove it along with\n *\n * @see https://github.com/zeit/next.js/pull/9988\n */\nexport function patchRouter() {\n  // @ts-ignore\n  if (!routeMatcher._patched) {\n    // @ts-ignore\n    routeMatcher._patched = true\n    // @ts-ignore\n    routeMatcher._getRouteMatcher = routeMatcher.getRouteMatcher\n    // @ts-ignore\n    routeMatcher.getRouteMatcher = function getPatchedRouteMatcher(routeRegex) {\n      // @ts-ignore\n      const originalMatcher = routeMatcher._getRouteMatcher(routeRegex)\n\n      return function patchedRouteMatcher(route: string) {\n        if (route.indexOf(pathPrefix) === 0) {\n          route = route.substr(pathPrefix.length)\n        }\n\n        return originalMatcher(route)\n      }\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}