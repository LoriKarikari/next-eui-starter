{"version":3,"file":"static/webpack/static/development/pages/index.js.78dca179f772d1d2078b.hot-update.js","sources":["webpack:///./src/components/link.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport Link, { LinkProps } from 'next/link'\n\nconst assetPrefix = process.env.PATH_PREFIX as string\n\n/**\n * Builds the correct value to be\n * @param href\n */\nexport function buildAsTarget(href: string): string {\n  return href.startsWith('/') ? assetPrefix + href : assetPrefix + '/' + href\n}\n\n/**\n * In order to support a site-wide path prefix (e.g. GitHub Pages), all usages of\n * Next's `<Link />` need to support the `as` prop. This is tedious, so wrap the\n * component and apply the `as` logic in one place.\n */\nconst NextJsLink: FunctionComponent<LinkProps> = ({ href, ...rest }) => {\n  const path = typeof href === 'object' ? href.pathname! : href\n\n  return <Link href={href} as={buildAsTarget(path)} {...rest} />\n}\n\nexport default NextJsLink\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;;;;;AAIA;AACA;AACA;AAEA;;;;;;AAKA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}