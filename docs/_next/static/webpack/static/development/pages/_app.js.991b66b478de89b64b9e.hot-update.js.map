{"version":3,"file":"static/webpack/static/development/pages/_app.js.991b66b478de89b64b9e.hot-update.js","sources":["webpack:///./src/lib/theme.ts"],"sourcesContent":["/**\n * The functions here are for tracking and setting the current theme.\n * localStorage is used to store the currently preferred them, though\n * that doesn't work on the server, where we just use a default.\n */\n\nexport type Theme = 'light' | 'dark'\n\nconst selector = `link[data-name=\"eui-theme\"]`\nconst defaultTheme: Theme = `light`\n\nfunction getThemes(): HTMLLinkElement[] {\n  // @ts-ignore: We need to target the compiler to es6 or higher for NodeListOf<Element> to be iterable\n  return [...document.querySelectorAll(selector)]\n}\n\nexport function setTheme(name: Theme): void {\n  localStorage.setItem('theme', name)\n\n  for (const theme of getThemes()) {\n    theme.disabled = theme.dataset.theme !== name\n  }\n}\n\nexport function getTheme(): Theme {\n  const storedTheme = localStorage.getItem('theme') as Theme | null\n\n  return storedTheme || defaultTheme\n}\n\nexport function setInitialTheme(): Theme {\n  if (typeof window !== 'object') {\n    return defaultTheme\n  }\n\n  const theme = getTheme()\n  setTheme(theme)\n  return theme\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AAEA;AACA;AAEA;AACA,eAEA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}